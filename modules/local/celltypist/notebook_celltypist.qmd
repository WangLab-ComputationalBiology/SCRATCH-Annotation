---
title: "Module - CellTypist"
author: "Andre Fonseca"
execute:
  cache: true
  freeze: auto
format:
  html:
    toc: true
    toc-location: right
    toc-depth: 2
    code-fold: show
    code-tools: true
    default-image-extension: svg
  ipynb: default
format-links: [ipynb]
params:
    project_name: "Project"
---

# Project Name: `r params$project_name`

## Loading library

```{python library}

import celltypist
import pandas as pd
from celltypist import models
import scanpy as sc

```

```{python}
#| echo: False
#| include: False

project_name = "Project"
count_matrix = "/Users/affaustino/Projects/SCRATCH-Annotation/test/melanoma_yost_2018.csv"

cell_model = "Immune_All_Low.pkl"
work_directory = "/Users/affaustino/Projects/SCRATCH-Annotation/test"

```

## Loading data

```{python}

count_matrix = pd.read_csv(count_matrix, engine = "pyarrow")
count_matrix = count_matrix.transpose()

```

```{python}

adata = sc.AnnData(count_matrix)

```

```{python}

sc.pp.normalize_total(adata, target_sum = 1e4)
sc.pp.log1p(adata)

```

```{python}

sc.pl.highest_expr_genes(adata, n_top = 20)

```

## Setting models

```{python}

# Enabling `force_update = True` will overwrite existing (old) models.
models.download_models(force_update = True)

```

```{python}

models.models_description()

```

```{python}

model = models.Model.load(model = cell_model)

```

```{python}

predictions = celltypist.annotate(
    adata, model = cell_model, majority_voting = True)

```

```{python}

adata = predictions.to_adata()

```

```{python}

sc.tl.umap(adata)

```

```{python}

sc.pl.umap(adata, color = ['majority_voting'], legend_loc = 'on data')

```

## Saving Data object

```{python}

adata.write_csvs("{work_directory}/{cell_model}".format(work_directory = work_directory, cell_model = cell_model.strip(".pkl")))

```
