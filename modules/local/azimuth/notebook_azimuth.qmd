---
title: "Module - Azimuth annotation"
description: | 
  Description
execute:
  freeze: auto
  cache: false
format:
  html:
    toc: true
    toc-location: right
    toc-depth: 2
    embed-resources: true
    code-fold: show
    code-tools: true
    df-print: paged
    fig-format: png
    fig-dpi: 300
    fig-responsive: true
    fig-align: center
lightbox:
    match: auto
    effect: zoom
    loop: true
params:
  project_name: 'Project'
  seurat_object: 'SCRATCH-Annotation/data/Yost_main_cluster_object.RDS'
  reference_object: 'SCRATCH-Annotation/data/tme_reference_object.RDS'
  n_threads: 8
  n_memory: 16
  work_directory: !expr here::here()
  auto_save: TRUE
---

```{r setup}
#| include: false

# Project parameters 
project_name <- params$project_name
seurat_object <- params$seurat_object
reference_object <- params$reference_object
  
# Optional parameters

# Dataflow/Computational parameters
n_threads <- params$n_threads
n_memory <- params$n_memory

# Output parameters
work_directory <- params$work_directory
timestamp <- params$timestamp
auto_save <- params$auto_save

# Rmarkdown options
knitr::opts_knit$set(
  root.dir = work_directory
  )

```

:::{.callout-important collapse="true"}
Here we will print the parameters
:::

## Loading library

```{r}
#| output: false

library(readr)
library(dplyr)
library(ggplot2)
library(Seurat)
library(Azimuth)

```

## Folder structure

```{r project_directory}
#| output: false

if(!dir.exists(work_directory)) {
  dir.create(work_directory, recursive = T)
}

for(sub_directory in c('data', 'figures')) {
  dir.create(paste0(work_directory, '/', sub_directory))
}

```

## Loading Seurat object

```{r}

# Reading seurat object
seurat_object <- readRDS(file = seurat_object)

# Reading reference object
reference_object <- readRDS(file = reference_object)

# Setting random seed
random_seed <- 2203
set.seed(random_seed)

```

## Projecting annotation

```{r}
#| output: false

# find anchors
anchors <- FindTransferAnchors(reference = reference_object, query = seurat_object)

# transfer labels
predictions <- TransferData(
  anchorset = anchors,
  refdata = reference_object$seurat_annotations
)

```

## Adding metadata

```{r}

# Renaming annotation column
predictions <- predictions %>%
  dplyr::rename(
    azimuth_labels = predicted.id
  )

# Adding labels
seurat_object <- AddMetaData(
  object = seurat_object, metadata = predictions)


```

## Data Visualization

```{r annotation_umap}
#| label: fig-azimuth-annot
#| fig-cap: 'UMAP'
#| fig-width: 15
#| fig-height: 10
#| fig-align: center
#| layout-nrow: 2

SCP::CellDimPlot(
  srt = seurat_object, 
  group.by = "azimuth_labels",
  reduction = "umap",
  label = TRUE, 
  label_repel = TRUE,
  show_stat = TRUE,
  theme_use = "theme_blank"
) +
  theme(
    legend.position = "top"
  )

```

:::{.callout-tip}
The @fig-azimuth-annot displays the final annotation after the hierarchical approach. Major cell types are shown when not further informantion is available on the cell annotation database.
:::

```{r}

SCP::CellDimPlot(
  srt = seurat_object, 
  group.by = "azimuth_labels",
  split.by = "azimuth_labels",
  reduction = "umap",
  label = FALSE, 
  label_repel = FALSE,
  show_stat = TRUE,
  legend.position = "none",
  theme_use = "theme_blank"
) +
  theme(
    legend.position = "top"
  )

```

## Quality metrics

```{r}

# ClusterPreservationScore

# MappingScore
SCP::FeatureDimPlot(
  srt = seurat_object, 
  features = "prediction.score.max",
  reduction = "umap",
  label = FALSE, 
  label_repel = FALSE,
  show_stat = TRUE,
  theme_use = "theme_blank"
)

```


```{r}

#

seurat_v4 <- seurat_object
seurat_v4[["RNA"]] <- as(object = seurat_v4[["RNA"]], Class = "Assay")

#

SCP::FeatureStatPlot(
  srt = seurat_v4, 
  group.by = "azimuth_labels",
  bg.by = "azimuth_labels",
  stat.by = "prediction.score.max",
  add_box = TRUE,
  add_line = 0.2, 
  line_type = 2
) +
  labs(
    y = "Prediction score"
  )

```

## Azimuth dendrogram

```{r annotation_tree}
#| warning: false

# Aggregate data by annotations
cell_average <- AverageExpression(
  seurat_object, 
  assay = 'RNA',
  slot = 'scale.data',
  return.seurat = FALSE, 
  group.by = "azimuth_labels"
  )

cell_average <- cell_average$RNA

# Compute distance matrix on aggregated data
cell_dist_matrix <- as.matrix(cell_average)
cell_dist_matrix <- stats::cor(cell_dist_matrix, method = "pearson")

# Convert correlation matrix to a distance matrix
cell_dist_matrix <- stats::as.dist(1 - cell_dist_matrix)

# Perform hierarchical clustering
cell_hierarchical <- stats::hclust(cell_dist_matrix)

```

```{r}
#| label: fig-dendrogram-final
#| fig-cap: 'Dendrogram'
#| fig-width: 10
#| fig-height: 12
#| fig-align: center

# Printing dendrogram

plot(cell_hierarchical, main = "Dendrogram", xlab = "Index", ylab = "Height", hang = -1)

```

:::{.callout-tip}
[Beta] The @fig-dendrogram-final displays the hierarchical clustering across the cell types based on average normalized expression from `scale.data`. The average expression per cell population is correlated based on Pearson. Therefore, correlated cells should display closet distances, i.e., clustering into near branches.
:::

## Differential expression

```{r}

pancreas_sub <- SCP::RunDEtest(srt = seurat_v4, group_by = "seurat_clusters", fc.threshold = 1, only.pos = FALSE)

```

```{r}

DEGs <- pancreas_sub@tools$DEtest_seurat_clusters$AllMarkers_wilcox
DEGs <- DEGs[with(DEGs, avg_log2FC > 1 & p_val_adj < 0.05), ]

# Annotate features with transcription factors and surface proteins
pancreas_sub <- SCP::AnnotateFeatures(pancreas_sub, species = "Homo_sapiens", db = c("TF", "CSPA"))

ht <- SCP::FeatureHeatmap(
  srt = pancreas_sub, group.by = "azimuth_labels", features = DEGs$gene, feature_split = DEGs$group1,
  species = "Homo_sapiens", db = c("GO_BP", "KEGG", "WikiPathway"), anno_terms = TRUE,
  feature_annotation = c("TF", "CSPA"), feature_annotation_palcolor = list(c("gold", "steelblue"), c("forestgreen")),
  height = 5, width = 4
)

print(ht$plot)

```

```{r}

seurat_annotation <- seurat_object
Idents(seurat_annotation) <- "azimuth_labels"

all_markers <- FindAllMarkers(
  object = seurat_annotation,
  only.pos = FALSE, 
  test.use = 'wilcox',
  logfc.threshold = 0.25,
  random.seed = random_seed,
  min.pct = 0.1
)

```

```{r}

top_markers <- all_markers %>%
  group_by(cluster) %>%
  top_n(5, avg_log2FC)

table(top_markers$cluster)
#table(top_markers$gene)

```

```{r}

DotPlot(
  seurat_annotation,
  features = top_markers$gene
) +
  theme(
    axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1)
  )

```

## Cell composition

```{r barplot_composition}
#| label: fig-bar-composition
#| fig-cap: 'Barplot'
#| fig-width: 18
#| fig-height: 10
#| fig-align: center

# Boxplot
SCP::CellStatPlot(
  seurat_object,
  stat.by = "seurat_clusters", 
  group.by = "azimuth_labels", 
  label = TRUE
)

```

:::{.callout-tip}
The @fig-bar-composition provides an overall view of cell composition across distinct clusters on the dataset.
:::

## Saving Seurat object

```{r object_dump}
#| cache: false

if(auto_save) {

  saveRDS(seurat_object, file = paste0("data/", project_name, "_sctype_agg_annotation_object.RDS"))

}

```

## Parameters log

```{r params_log, message = FALSE, warning = FALSE, echo = FALSE}

print(params)

```

## Session info

```{r session_info, message = FALSE, warning = FALSE, echo = FALSE}

sessionInfo()

```
