// IMPORTANT: Add this configuration to your modules.config

process {

    withName: "HELPER_SEURAT_SUBSET" {
        ext.when = { !params.input_cell_mask.contains('NO_FILE')}
    }

    withName: "CELLTYPIST_ANNOTATION" {
        ext.args = {
            [
                params.project_name ? "project_name:${params.project_name}" : '',
                params.organism ? "organism:${params.organism}" : '',
                "work_directory:\$PWD"
            ].join(' -P ').trim()
        }
        ext.when = { !params.skip_celltypist }
        publishDir = [
            [
                path: { "${params.outdir}/data/${task.process}" },
                pattern: '{data/*,figures/*}',
                mode: 'copy',
                overwrite: true
            ],
            [
                path: { "${params.outdir}/" },
                pattern: 'report/*.html',
                mode: 'copy',
                overwrite: true
            ],
            [
                path: { "${params.outdir}/data/${task.process}" },
                pattern: '_freeze/**/figure-html/*.png',
                saveAs: { file -> file.endsWith('.png') ? "figures/${file.split('/').last()}" : null },
                mode: 'copy',
                overwrite: true
            ],
        ]
    }

    withName: "SCYTPE_MAJOR_ANNOTATION" {
        ext.args = {
            [
                params.project_name ? "project_name:${params.project_name}" : '',
                "work_directory:\$PWD"
            ].join(' -P ').trim()
        }
        ext.when = { params.organism == "Human" }
        publishDir = [
            [
                path: { "${params.outdir}/data/${task.process}" },
                pattern: '{data/*,figures/*}',
                mode: 'copy',
                overwrite: true
            ],
            [
                path: { "${params.outdir}/" },
                pattern: 'report/*.html',
                mode: 'copy',
                overwrite: true
            ],
            [
                path: { "${params.outdir}/data/${task.process}" },
                pattern: '_freeze/**/figure-html/*.png',
                saveAs: { file -> file.endsWith('.png') ? "figures/${file.split('/').last()}" : null },
                mode: 'copy',
                overwrite: true
            ],
        ]
    }

    withName: "SCYTPE_STATE_ANNOTATION" {
        ext.args = {
            [
                params.project_name ? "project_name:${params.project_name}" : '',
                params.thr_n_features ? "thr_n_features:${params.thr_n_features}" : '',
                params.thr_npc ? "thr_npc:${params.thr_npc}" : '',
                params.thr_resolution ? "thr_resolution:${params.thr_resolution}" : '',
                "work_directory:\$PWD"
            ].join(' -P ').trim()
        }
        ext.when = { params.organism == "Human" }
        publishDir = [
            [
                path: { "${params.outdir}/data/${task.process}" },
                pattern: '{data/*,figures/*}',
                mode: 'copy',
                overwrite: true
            ],
            [
                path: { "${params.outdir}/" },
                pattern: 'report/*.html',
                mode: 'copy',
                overwrite: true
            ]
            [
                path: { "${params.outdir}/data/${task.process}" },
                pattern: '_freeze/**/figure-html/*.png',
                saveAs: { file -> file.endsWith('.png') ? "figures/${file.split('/').last()}" : null },
                mode: 'copy',
                overwrite: true
            ],
        ]
    }

    withName: "SCYTPE_AGGREGATE_ANNOTATION" {
        ext.args = {
            [
                params.project_name ? "project_name:${params.project_name}" : '',
                "work_directory:\$PWD"
            ].join(' -P ').trim()
        }
        ext.when = { params.organism == "Human" }
        publishDir = [
            [
                path: { "${params.outdir}/data/${task.process}" },
                pattern: '{data/*,figures/*}',
                mode: 'copy',
                overwrite: true
            ],
            [
                path: { "${params.outdir}/" },
                pattern: 'report/*.html',
                mode: 'copy',
                overwrite: true
            ]
            [
                path: { "${params.outdir}/data/${task.process}" },
                pattern: '_freeze/**/figure-html/*.png',
                saveAs: { file -> file.endsWith('.png') ? "figures/${file.split('/').last()}" : null },
                mode: 'copy',
                overwrite: true
            ],
        ]
    }

    withName: "QUARTO_RENDER_PROJECT" {
        publishDir = [
            path:{ "${params.outdir}/" },
            mode: 'copy'
        ]
    }

}
