/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

nextflow.enable.moduleBinaries = true

params {

    // Pipeline parameters CHANGE IT stringToUri()
    input_seurat_object     = "${launchDir}/data/Yost_main_cluster_object.RDS"
    input_cell_mask         = "${launchDir}/data/Yost_main_cell_status.csv"
    outdir                  = "${launchDir}"
    project_name            = "Project"

    // Notebooks path 
    notebook_celltypist     = "${launchDir}/modules/local/celltypist/notebook_celltypist.qmd"
    notebook_sctype_major   = "${launchDir}/modules/local/sctype/major/notebook_sctype_major.qmd"
    notebook_sctype_state   = "${launchDir}/modules/local/sctype/state/notebook_sctype_states.qmd"

    // Cell annotation parameters
    annotation_db           = "${launchDir}/assets/cell_markers_database.csv"
    organism                = "Human"

    // scType subset/states parameters
    thr_n_features          = 2000
    thr_npc                 = 25
    thr_resolution          = 0.25
    
    // Dataflow parameters
    skip_python             = false

    // Quarto requirements
    page_config             = "${launchDir}/assets/template/_quarto.yml"
    template                = "${launchDir}/assets/template/*"

    // Max resource options
    max_cpus                = 16
    max_memory              = '128.GB'
    max_time                = '240.h'

}

docker {
    enabled                 = true
    fixOwnership            = true
}

process {
    containerOptions        = '-u root:root -e USERID=$UID -e XDG_CACHE_HOME=tmp/quarto_cache_home -e XDG_DATA_HOME=tmp/quarto_data_home -e QUARTO_PRINT_STACK=true'
    stageInMode             = 'copy'
    afterScript             = 'rm -rf tmp'
}

// Load nf-core custom profiles from different Institutions
profiles {

    test { includeConfig 'conf/test.config' }

}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}